{"version":3,"sources":["styled-components/StyledHeader.tsx","styled-components/StyledPage.tsx","styled-components/StyledParagraph.tsx","pages/AboutComponent.tsx","styled-components/StyledLoadingImage.tsx","styled-components/StyledResult.tsx","components/Result.tsx","hooks/useForm.tsx","redux/resultSlice.tsx","hooks/useSearchHero.tsx","styled-components/consts.tsx","styled-components/StyledForm.tsx","components/SearchForm.tsx","pages/HomeComponent.tsx","styled-components/StyledApp.tsx","redux/store.tsx","styled-components/GlobalStyle.tsx","providers/ThemeProvider.tsx","styled-components/StyledNav.tsx","components/Navigation.tsx","components/App.tsx","helpers/reactQueryClient.tsx","index.tsx"],"names":["StyledHeader","styled","h1","props","theme","global","accent","background","foreground","StyledPage","div","StyledParagraph","p","AboutComponent","size","StyledLoadingImage","img","StyledResult","section","highlight","Result","result","loading","error","data","src","process","alt","message","results","map","name","gender","birth_year","height","mass","hair_color","useForm","initialValues","useState","values","setValues","event","target","value","prev","initialState","undefined","resultSlice","createSlice","reducers","setLoading","state","action","payload","setError","setData","actions","searchHero","query","a","fetch","res","ok","json","Error","useSearchHero","useQuery","enabled","Boolean","isLoading","dispatch","useDispatch","useEffect","themes","light","button","borderWidth","borderStyle","primary","borderColor","input","placeholder","dark","device","mobile","tablet","desktop","StyledForm","form","SearchForm","search","update","reset","setQuery","onSubmit","preventDefault","id","type","onChange","HomeComponent","useSelector","StyledApp","main","configureStore","reducer","resultReducer","GlobalStyle","createGlobalStyle","ThemeContext","createContext","toggleTheme","console","log","ThemeProvider","children","localStorage","getItem","setTheme","val","setItem","Provider","StyledNav","nav","Navigation","routes","useContext","PUBLIC_URL","toggleSrc","className","exact","to","link","label","activeClassName","onClick","App","store","path","component","reactQueryClient","QueryClient","defaultOptions","queries","staleTime","content","StrictMode","QueryClientProvider","client","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edcdde26.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst StyledHeader = styled.h1`\n  padding: 10px 20px;\n  margin-top: 0;\n  background-color: ${props => props.theme.global.accent.background};\n  color: ${props => props.theme.global.accent.foreground};\n`;\n\nexport default StyledHeader;\n","import styled from 'styled-components';\n\nconst StyledPage = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  margin: 20px 0;\n  overflow: auto;\n\n  > * {\n    max-width: 800px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport default StyledPage;\n","import styled from 'styled-components';\n\nconst StyledParagraph = styled.p`\n  line-height: 1.75;\n  padding: 0.5rem 0;\n  color: ${props => props.theme.global.foreground};\n\n  &:first-of-type {\n    margin-top: 2rem;\n  }\n`;\n\nexport default StyledParagraph;\n","import StyledHeader from '../styled-components/StyledHeader';\nimport StyledPage from '../styled-components/StyledPage';\nimport StyledParagraph from '../styled-components/StyledParagraph';\n\nconst AboutComponent = (): JSX.Element => {\n  return (\n    <StyledPage>\n      <StyledHeader>Tech Challenge</StyledHeader>\n      <StyledParagraph>\n        Small Single App that shows all the information related to a character\n        from the Star Wars Universe.\n      </StyledParagraph>\n      <StyledParagraph>\n        Users can submit the name of a character they are looking for in order\n        to see all the relevant information in a dedicated area.\n      </StyledParagraph>\n    </StyledPage>\n  );\n};\n\nexport default AboutComponent;\n","import styled from 'styled-components';\n\nconst size = 120;\n\nconst StyledLoadingImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: ${size}px;\n  height: ${size}px;\n  margin-top: ${-size / 2}px;\n  margin-left: ${-size / 2}px;\n  animation: spin 3s linear infinite;\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default StyledLoadingImage;\n","import styled from 'styled-components';\n\nconst StyledResult = styled.section`\n  article {\n    margin: 20px 0;\n    background-color: ${props => props.theme.global.highlight.background};\n    color: ${props => props.theme.global.highlight.foreground};\n\n    h1 {\n      margin-bottom: 0;\n    }\n\n    dl {\n      margin: 0;\n      dt,\n      dd {\n        display: inline-block;\n        width: 50%;\n        margin: 0;\n        padding: 10px 20px;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        border-bottom-color: ${props => props.theme.global.accent.background};\n\n        &:last-of-type {\n          border-bottom: none;\n        }\n      }\n    }\n  }\n`;\n\nexport default StyledResult;\n","/* eslint-disable camelcase */\nimport { RootState } from 'src/redux/store';\nimport StyledHeader from 'src/styled-components/StyledHeader';\nimport StyledLoadingImage from '../styled-components/StyledLoadingImage';\nimport StyledResult from '../styled-components/StyledResult';\n\nconst Result = ({\n  result: { loading, error, data },\n}: {\n  result: RootState;\n}): JSX.Element => {\n  if (loading) {\n    const { PUBLIC_URL } = process.env;\n    return <StyledLoadingImage src={`${PUBLIC_URL}/logo512.png`} alt=\"Logo\" />;\n  }\n  if (error) {\n    return <pre>{error.message}</pre>;\n  }\n  return (\n    <StyledResult>\n      {(data?.results || []).map(\n        ({ name, gender, birth_year, height, mass, hair_color }) => (\n          <article key={name}>\n            <StyledHeader>{name}</StyledHeader>\n            <dl>\n              <dt>Gender</dt>\n              <dd>{gender}</dd>\n              <dt>Birth Year</dt>\n              <dd>{birth_year}</dd>\n              <dt>Height</dt>\n              <dd>{height}</dd>\n              <dt>Mass</dt>\n              <dd>{mass}</dd>\n              <dt>Hair Colour</dt>\n              <dd>{hair_color}</dd>\n            </dl>\n          </article>\n        )\n      )}\n    </StyledResult>\n  );\n};\n\nexport default Result;\n","import { SyntheticEvent, useState } from 'react';\n\nconst useForm = <T extends Record<string, string>>(\n  initialValues: T\n  // eslint-disable-next-line no-unused-vars\n): [T, (event: SyntheticEvent) => void, () => void] => {\n  const [values, setValues] = useState<T>(initialValues);\n\n  const updateValue = (event: SyntheticEvent) => {\n    const { name, value } = event.target as HTMLInputElement;\n    if (!name) return;\n    setValues(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const resetValues = () => setValues(initialValues);\n\n  return [values, updateValue, resetValues];\n};\n\nexport default useForm;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { APIResponse } from 'src/interfaces/Response';\n\nexport interface ResultState {\n  loading: boolean;\n  error: Error | null;\n  data: APIResponse | undefined;\n}\n\nexport const initialState: ResultState = {\n  loading: false,\n  error: null,\n  data: undefined,\n};\n\nexport const resultSlice = createSlice({\n  name: 'result',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { setLoading, setError, setData } = resultSlice.actions;\n\nexport default resultSlice.reducer;\n","import { useEffect } from 'react';\nimport { useQuery, UseQueryResult } from 'react-query';\nimport { useDispatch } from 'react-redux';\nimport { APIResponse } from 'src/interfaces/Response';\nimport { setLoading, setError, setData } from '../redux/resultSlice';\n\nconst { REACT_APP_SERVICE_API } = process.env;\n\nconst searchHero = async (query: string): Promise<APIResponse> => {\n  const res = await fetch(`${REACT_APP_SERVICE_API}/people/?search=${query}`);\n  if (res.ok) {\n    return res.json();\n  }\n  throw new Error('Network error');\n};\n\nconst useSearchHero = (query: string): void => {\n  const { isLoading, error, data }: UseQueryResult<APIResponse, Error> =\n    useQuery<APIResponse, Error>(['hero', query], () => searchHero(query), {\n      enabled: Boolean(query),\n    });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoading || error || data) {\n      dispatch(setLoading(isLoading));\n      dispatch(setError(error));\n      dispatch(setData(data));\n    }\n  }, [isLoading, error, data, dispatch]);\n};\n\nexport default useSearchHero;\n","/* eslint-disable import/prefer-default-export */\nimport { Theme } from 'src/interfaces/Theme';\n\nexport const themes: { light: Theme; dark: Theme } = {\n  light: {\n    global: {\n      background: '#fafafa',\n      foreground: '#383838',\n      accent: {\n        background: '#cdcdcd',\n        foreground: '#404040',\n      },\n      highlight: {\n        background: '#e4e4e4',\n        foreground: '#494949',\n      },\n    },\n    button: {\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      primary: {\n        background: '#aaa',\n        borderColor: '#999',\n        foreground: '#3d3d3d',\n      },\n    },\n    input: {\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#999',\n      background: '#e8e8e8',\n      foreground: '#444',\n      placeholder: '#999',\n    },\n  },\n  dark: {\n    global: {\n      background: '#383838',\n      foreground: '#fafafa',\n      accent: {\n        background: '#404040',\n        foreground: '#cdcdcd',\n      },\n      highlight: {\n        background: '#494949',\n        foreground: '#e4e4e4',\n      },\n    },\n    button: {\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      primary: {\n        background: '#3d3d3d',\n        borderColor: '#333',\n        foreground: '#aaa',\n      },\n    },\n    input: {\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#333',\n      background: '#999',\n      foreground: '#0d0d0d',\n      placeholder: '#555',\n    },\n  },\n};\n\nconst size = {\n  mobile: '375px',\n  tablet: '768px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobile: `(min-width: ${size.mobile})`,\n  tablet: `(min-width: ${size.tablet})`,\n  desktop: `(min-width: ${size.desktop})`,\n};\n\nexport const transitionDuration = '0.25s';\n","import styled from 'styled-components';\nimport { device, transitionDuration } from './consts';\n\nconst StyledForm = styled.form`\n  display: flex;\n  padding: 15px;\n  position: sticky;\n  top: 0;\n  background: ${props => props.theme.global.accent.background};\n  transition: padding ${transitionDuration};\n\n  input {\n    width: 100%;\n    border-width: ${props => props.theme.input.borderWidth};\n    border-style: ${props => props.theme.input.borderStyle};\n    border-color: ${props => props.theme.input.borderColor};\n    border-right: none;\n    color: ${props => props.theme.input.foreground};\n    background-color: ${props => props.theme.input.background};\n    outline: none;\n    padding: 5px 10px;\n\n    ::placeholder {\n      color: ${props => props.theme.input.placeholder};\n    }\n  }\n\n  button {\n    border-width: ${props => props.theme.button.borderWidth};\n    border-style: ${props => props.theme.button.borderStyle};\n    border-color: ${props => props.theme.button.primary.borderColor};\n    background: ${props => props.theme.button.primary.background};\n    color: ${props => props.theme.button.primary.foreground};\n  }\n\n  @media ${device.tablet} {\n    padding: 40px 80px;\n  }\n`;\n\nexport default StyledForm;\n","import { FormEvent, useState } from 'react';\nimport useForm from 'src/hooks/useForm';\nimport useSearchHero from 'src/hooks/useSearchHero';\nimport StyledForm from '../styled-components/StyledForm';\n\nconst SearchForm = (): JSX.Element => {\n  const [{ search }, update, reset] = useForm({ search: '' });\n  const [query, setQuery] = useState<string>('');\n\n  useSearchHero(query);\n\n  const submit = (event: FormEvent) => {\n    event.preventDefault();\n    setQuery(search);\n    reset();\n  };\n\n  return (\n    <StyledForm onSubmit={submit}>\n      <input\n        id=\"searchInput\"\n        aria-label=\"Search Input\"\n        type=\"text\"\n        name=\"search\"\n        value={search}\n        onChange={update}\n        placeholder=\"Search for your favourite Star Wars Hero\"\n      />\n      <button type=\"submit\">search</button>\n    </StyledForm>\n  );\n};\n\nexport default SearchForm;\n","import { useSelector } from 'react-redux';\nimport Result from 'src/components/Result';\nimport SearchForm from 'src/components/SearchForm';\nimport { RootState } from '../redux/store';\nimport StyledHeader from '../styled-components/StyledHeader';\nimport StyledPage from '../styled-components/StyledPage';\n\nconst HomeComponent = (): JSX.Element => {\n  const loading = useSelector(\n    (state: { result: RootState }) => state.result.loading\n  );\n  const error = useSelector(\n    (state: { result: RootState }) => state.result.error\n  );\n  const data = useSelector((state: { result: RootState }) => state.result.data);\n\n  return (\n    <StyledPage>\n      <StyledHeader>Search your Hero</StyledHeader>\n      <SearchForm />\n      <Result result={{ loading, error, data }} />\n    </StyledPage>\n  );\n};\n\nexport default HomeComponent;\n","import styled from 'styled-components';\n\nconst StyledApp = styled.main`\n  background: ${props => props.theme.global.background};\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nexport default StyledApp;\n","import { configureStore } from '@reduxjs/toolkit';\nimport resultReducer from './resultSlice';\n\nexport default configureStore({\n  reducer: {\n    result: resultReducer,\n  },\n});\nexport type RootState = ReturnType<typeof resultReducer>;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n  html, body, #root, main {\n    height:100%; \n  }\n  body { \n    font-family: 'Montserrat', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  button { \n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","/* eslint-disable no-console */\n/* eslint-disable import/prefer-default-export */\nimport { createContext, ReactElement, useContext, useState } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport { ThemeContextValue } from 'src/interfaces/ThemeContextValue';\nimport { themes } from '../styled-components/consts';\n\nconst ThemeContext = createContext<ThemeContextValue>({\n  theme: 'light',\n  toggleTheme: () => console.log('default'),\n});\n\nexport const useTheme = (): ThemeContextValue => useContext(ThemeContext);\n\nexport const ThemeProvider = ({\n  children,\n}: {\n  children: ReactElement;\n}): JSX.Element => {\n  const [theme, setTheme] = useState<'light' | 'dark'>(\n    (localStorage.getItem('theme') as 'light' | 'dark') || 'light'\n  );\n  const toggleTheme = () => {\n    setTheme(prev => {\n      const val = prev === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', val);\n      return val;\n    });\n  };\n  const value: ThemeContextValue = {\n    theme,\n    toggleTheme,\n  };\n  return (\n    <ThemeContext.Provider value={value}>\n      <SCThemeProvider theme={themes[theme]}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from './consts';\n\nconst StyledNav = styled.nav`\n  background: ${props => props.theme.global.accent.background};\n  color: ${props => props.theme.global.accent.foreground};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n\n  .logo {\n    padding: 5px;\n    &,\n    & img {\n      height: 100%;\n    }\n  }\n  a {\n    color: ${props => props.theme.global.accent.foreground};\n    text-decoration: none;\n    align-items: center;\n    padding: 10px;\n    display: flex;\n  }\n\n  .menu {\n    display: flex;\n\n    a {\n      display: none;\n\n      &.active {\n        background-color: ${props => props.theme.global.background};\n      }\n\n      @media ${device.tablet} {\n        display: inline-block;\n      }\n    }\n\n    button {\n      border: none;\n      padding: 0;\n      margin: 0;\n      background: transparent;\n    }\n  }\n`;\n\nexport default StyledNav;\n","import { NavLink } from 'react-router-dom';\nimport { NavigationRoute } from 'src/interfaces/Navigation';\nimport { useTheme } from 'src/providers/ThemeProvider';\nimport StyledNav from 'src/styled-components/StyledNav';\n\nconst Navigation = ({\n  routes,\n}: {\n  routes: Array<NavigationRoute>;\n}): JSX.Element => {\n  const { theme, toggleTheme } = useTheme();\n  const { PUBLIC_URL } = process.env;\n  const toggleSrc = `${PUBLIC_URL}/${\n    theme === 'light' ? 'mask-black.png' : 'mask-white.png'\n  }`;\n\n  return (\n    <StyledNav>\n      <NavLink className=\"logo\" exact to=\"/\">\n        <img src={`${PUBLIC_URL}/logo256.png`} alt=\"Logo\" />\n        Start Wars Heroes\n      </NavLink>\n      <div className=\"menu\">\n        {routes.map(({ link, label }) => (\n          <NavLink key={link} exact to={link} activeClassName=\"active\">\n            {label}\n          </NavLink>\n        ))}\n        <button type=\"button\" onClick={toggleTheme}>\n          <img\n            src={toggleSrc}\n            alt={`Toggle Theme to ${theme === 'light' ? 'dark' : 'light'}`}\n          />\n        </button>\n      </div>\n    </StyledNav>\n  );\n};\n\nexport default Navigation;\n","import { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { NavigationRoute } from 'src/interfaces/Navigation';\nimport AboutComponent from 'src/pages/AboutComponent';\nimport HomeComponent from 'src/pages/HomeComponent';\nimport StyledApp from 'src/styled-components/StyledApp';\nimport store from '../redux/store';\nimport GlobalStyle from '../styled-components/GlobalStyle';\nimport Navigation from './Navigation';\n\nconst App = (): JSX.Element => {\n  const routes: NavigationRoute[] = [\n    {\n      link: '/',\n      label: 'Home',\n    },\n    {\n      link: '/about',\n      label: 'About',\n    },\n  ];\n\n  return (\n    <StyledApp>\n      <Provider store={store}>\n        <Router>\n          <GlobalStyle />\n          <Navigation routes={routes} />\n          <Switch>\n            <Route exact path=\"/\" component={HomeComponent} />\n            <Route exact path=\"/about\" component={AboutComponent} />\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </StyledApp>\n  );\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { QueryClient } from 'react-query';\n\nexport const reactQueryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 60 * 1000, // results cached for a minute\n    },\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClientProvider } from 'react-query';\nimport App from './components/App';\nimport { reactQueryClient } from './helpers/reactQueryClient';\nimport { ThemeProvider } from './providers/ThemeProvider';\nimport 'normalize.css';\nimport './index.css';\n\nconst content = (\n  <React.StrictMode>\n    <QueryClientProvider client={reactQueryClient}>\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>\n);\nif (process.env.NODE_ENV !== 'production') {\n  import('@axe-core/react').then(axe => {\n    axe.default(React, ReactDOM, 1000);\n    ReactDOM.render(content, document.getElementById('root'));\n  });\n} else {\n  ReactDOM.render(content, document.getElementById('root'));\n}\n"],"sourceRoot":""}